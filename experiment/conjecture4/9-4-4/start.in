LIB "resolve.lib";

int t = timer;
ideal J = x^9 + y^4*z^4;

printf("Polynomial:%s", J[1]);

list l = resolve(J);
//presentTree(l);

printf("Time taken to resolve :%s", timer - t);

list mypath = 1,3,7,15,30,51,83,139,233,361,518,673,834,970,1062,1094;
int chartNum = 490;

def fC = l[1][chartNum];
setring(fC);

list chartPaths;

for(int i = 1; i <= size(mypath); i++)
{
	chartPaths = insert(chartPaths, string(path[2,i+1]), size(chartPaths));
}

proc showPath()
{

	printf("Showing path %s", chartNum);
	for(int i = 1; i <= size(mypath); i++)
	{
		def Q = l[2][mypath[i]];
		setring(Q);

		printf("=============================Blow Up %s===========================", i);
		printf("Ring variables: %s", varstr(Q));
		printf("");

		if(i > 1) 
		{
			printf("Last map: %s", lastMap); 
			printf("");
		}

		printf("Strict transform: %s", BO[2]);
		printf("");
		printf("Exceptional divisors: ");
		printf("");
		BO[4];
		printf("");
		printf("Center of blowup: %s", cent);
		printf("");
		printf("Passing to chart: %s", chartPaths[i]);
	}
}

showPath();
